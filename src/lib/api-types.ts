/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/profile/': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Profile */
    post: operations['create_profile_profile__post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/profile/{user_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Profile */
    get: operations['get_user_profile_profile__user_id__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    /** Update User Profile */
    patch: operations['update_user_profile_profile__user_id__patch'];
    trace?: never;
  };
  '/meetings': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Meetings */
    get: operations['get_meetings_meetings_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/meetings/suggestions': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Meeting Suggestions */
    get: operations['get_meeting_suggestions_meetings_suggestions_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/legislative-files/meetings': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get Meetings By Legislative Id
     * @description Returns all meetings from the mep_meetings table that reference the given legislative (procedure_reference) ID
     */
    get: operations['get_meetings_by_legislative_id_legislative_files_meetings_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/crawler/': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Dummy Crawl */
    get: operations['dummy_crawl_crawler__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/scheduler/tick': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Run Scheduled Tasks */
    get: operations['run_scheduled_tasks_scheduler_tick_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/scheduler/run/{job_name}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Run Task */
    post: operations['run_task_scheduler_run__job_name__post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/chat/': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Get Chat Response */
    post: operations['get_chat_response_chat__post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/chat/start': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Session */
    post: operations['create_new_session_chat_start_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/chat/sessions/{session_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get All Messages */
    get: operations['get_all_messages_chat_sessions__session_id__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/chat/sessions': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Sessions */
    get: operations['get_user_sessions_chat_sessions_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/topics': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Topics */
    get: operations['get_topics_topics_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/legislative-files': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Legislative Files */
    get: operations['get_legislative_files_legislative_files_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/legislative-files/suggestions': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Legislation Suggestions */
    get: operations['get_legislation_suggestions_legislative_files_suggestions_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/notifications/{user_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get Notifications For User
     * @description Retrieve all notifications for a specific user by their ID.
     */
    get: operations['get_notifications_for_user_notifications__user_id__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/alerts': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Alerts Endpoint */
    get: operations['get_alerts_endpoint_alerts_get'];
    put?: never;
    /** Create Alert Endpoint */
    post: operations['create_alert_endpoint_alerts_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/alerts/{alert_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Alert Endpoint */
    delete: operations['delete_alert_endpoint_alerts__alert_id__delete'];
    options?: never;
    head?: never;
    /** Set Alert Active Endpoint */
    patch: operations['set_alert_active_endpoint_alerts__alert_id__patch'];
    trace?: never;
  };
  '/alerts/{alert_id}/meetings': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Relevant Meetings Endpoint */
    get: operations['get_relevant_meetings_endpoint_alerts__alert_id__meetings_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Root */
    get: operations['root__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** AlertResponse */
    AlertResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Description */
      description: string;
      /** Embedding */
      embedding: number[];
      /** Relevancy Threshold */
      relevancy_threshold: number;
      /** Last Run At */
      last_run_at: string | null;
      /** Is Active */
      is_active: boolean;
      /** Created At */
      created_at: string | null;
      /** Updated At */
      updated_at: string | null;
    };
    /** ChatMessageItem */
    ChatMessageItem: {
      /** Session Id */
      session_id: string;
      /** Message */
      message: string;
    };
    /** CreateAlertRequest */
    CreateAlertRequest: {
      /** User Id */
      user_id: string;
      /** Description */
      description: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][];
    };
    /** KeyEvent */
    KeyEvent: {
      /** Date */
      date?: string | null;
      /** Event */
      event?: string | null;
      /** Summary */
      summary?: string | null;
      reference?: components['schemas']['Reference'] | null;
    };
    /** KeyPlayer */
    KeyPlayer: {
      /** Institution */
      institution: string;
      /** Committee */
      committee: string;
      /** Committee Full */
      committee_full?: string | null;
      /** Committee Link */
      committee_link?: string | null;
      /** Rapporteurs */
      rapporteurs?: components['schemas']['Rapporteur'][] | null;
      /** Shadow Rapporteurs */
      shadow_rapporteurs?: components['schemas']['Rapporteur'][] | null;
    };
    /** LegislativeFile */
    LegislativeFile: {
      /** Id */
      id: string;
      /** Source Table */
      source_table: string;
      /** Source Id */
      source_id: string;
      /** Link */
      link?: string | null;
      /** Title */
      title: string;
      /** Lastpubdate */
      lastpubdate?: string | null;
      /** Details Link */
      details_link?: string | null;
      /** Committee */
      committee?: string | null;
      /** Rapporteur */
      rapporteur?: string | null;
      /** Status */
      status?: string | null;
      /** Subjects */
      subjects?: string[] | null;
      /** Key Players */
      key_players?: components['schemas']['KeyPlayer'][] | null;
      /** Key Events */
      key_events?: components['schemas']['KeyEvent'][] | null;
      /** Documentation Gateway */
      documentation_gateway?:
        | {
            [key: string]: unknown;
          }[]
        | null;
      /** Similarity */
      similarity?: number | null;
    };
    /** LegislativeFileSuggestion */
    LegislativeFileSuggestion: {
      /** Id */
      id: string;
      /** Title */
      title: string;
      /** Similarity Score */
      similarity_score: number;
    };
    /** LegislativeFileSuggestionResponse */
    LegislativeFileSuggestionResponse: {
      /** Data */
      data: components['schemas']['LegislativeFileSuggestion'][];
    };
    /** LegislativeFilesResponse */
    LegislativeFilesResponse: {
      /** Legislative Files */
      legislative_files: components['schemas']['LegislativeFile'][];
    };
    /** LegislativeMeeting */
    LegislativeMeeting: {
      /** Id */
      id: string;
      /** Title */
      title: string;
      /** Member Name */
      member_name: string;
      /**
       * Meeting Date
       * Format: date-time
       */
      meeting_date: string;
      /** Meeting Location */
      meeting_location: string;
      /** Member Capacity */
      member_capacity: string;
      /** Procedure Reference */
      procedure_reference?: string | null;
      /** Associated Committee Or Delegation Code */
      associated_committee_or_delegation_code?: string | null;
      /** Associated Committee Or Delegation Name */
      associated_committee_or_delegation_name?: string | null;
      /** Embedding Input */
      embedding_input?: string | null;
      /**
       * Scraped At
       * Format: date-time
       */
      scraped_at: string;
    };
    /** LegislativeMeetingsResponse */
    LegislativeMeetingsResponse: {
      /** Data */
      data: components['schemas']['LegislativeMeeting'][];
    };
    /** Meeting */
    Meeting: {
      /** Meeting Id */
      meeting_id: string;
      /** Source Table */
      source_table: string;
      /** Source Id */
      source_id: string;
      /** Title */
      title: string;
      /** Topic */
      topic?: string | null;
      /** Status */
      status?: string | null;
      /** Meeting Url */
      meeting_url?: string | null;
      /**
       * Meeting Start Datetime
       * Format: date-time
       */
      meeting_start_datetime: string;
      /** Meeting End Datetime */
      meeting_end_datetime?: string | null;
      /** Location */
      location?: string | null;
      /** Exact Location */
      exact_location?: string | null;
      /** Description */
      description?: string | null;
      /** Tags */
      tags?: string[] | null;
      /** Similarity */
      similarity?: number | null;
    };
    /** MeetingSuggestion */
    MeetingSuggestion: {
      /** Title */
      title: string;
      /** Similarity Score */
      similarity_score: number;
    };
    /** MeetingSuggestionResponse */
    MeetingSuggestionResponse: {
      /** Data */
      data: components['schemas']['MeetingSuggestion'][];
    };
    /** MessagesResponseModel */
    MessagesResponseModel: {
      /** Id */
      id: string;
      /** Chat Session */
      chat_session: string;
      /** Content */
      content: string;
      /** Author */
      author: string;
      /**
       * Date
       * Format: date-time
       */
      date: string;
    };
    /** NewChatResponseModel */
    NewChatResponseModel: {
      /** Session Id */
      session_id: string;
    };
    /** NewSessionItem */
    NewSessionItem: {
      /** Title */
      title: string;
      /** User Id */
      user_id: string;
    };
    /** Notification */
    Notification: {
      /** Id */
      id: number;
      /**
       * User Id
       * Format: uuid
       */
      user_id: string;
      /**
       * Sent At
       * Format: date-time
       */
      sent_at: string;
      /** Type */
      type: string;
      /** Message */
      message: string | null;
      /** Relevance Score */
      relevance_score: number | null;
    };
    /** ProfileCreate */
    ProfileCreate: {
      /**
       * Id
       * Format: uuid4
       */
      id: string;
      /** Name */
      name: string;
      /** Surname */
      surname: string;
      /** Company Name */
      company_name: string;
      /** Company Description */
      company_description: string;
      /** Topic Ids */
      topic_ids: string[];
      /** Countries */
      countries: string[];
      /**
       * Newsletter Frequency
       * @enum {string}
       */
      newsletter_frequency: 'daily' | 'weekly' | 'none';
    };
    /** ProfileReturn */
    ProfileReturn: {
      /**
       * Id
       * Format: uuid4
       */
      id: string;
      /** Name */
      name: string;
      /** Surname */
      surname: string;
      /** Company Name */
      company_name: string;
      /** Company Description */
      company_description: string;
      /** Topic Ids */
      topic_ids: string[];
      /** Countries */
      countries: string[];
      /**
       * Newsletter Frequency
       * @enum {string}
       */
      newsletter_frequency: 'daily' | 'weekly' | 'none';
      /** Embedding */
      embedding: number[];
    };
    /** ProfileUpdate */
    ProfileUpdate: {
      /** Name */
      name?: string | null;
      /** Surname */
      surname?: string | null;
      /** Company Name */
      company_name?: string | null;
      /** Company Description */
      company_description?: string | null;
      /** Topic Ids */
      topic_ids?: string[] | null;
      /** Countries */
      countries?: string[] | null;
      /** Newsletter Frequency */
      newsletter_frequency?: ('daily' | 'weekly' | 'none') | null;
    };
    /** Rapporteur */
    Rapporteur: {
      /** Name */
      name: string;
      /** Link */
      link?: string | null;
    };
    /** Reference */
    Reference: {
      /** Text */
      text?: string | null;
      /** Link */
      link?: string | null;
    };
    /** SessionsResponseModel */
    SessionsResponseModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Title */
      title: string;
    };
    /** Topic */
    Topic: {
      /** Topic */
      topic: string;
      /** Id */
      id: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  create_profile_profile__post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ProfileCreate'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_user_profile_profile__user_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ProfileReturn'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  update_user_profile_profile__user_id__patch: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ProfileUpdate'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ProfileReturn'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_meetings_meetings_get: {
    parameters: {
      query?: {
        limit?: number;
        /** @description Start datetime (ISO8601) */
        start?: string | null;
        /** @description End datetime (ISO8601) */
        end?: string | null;
        /** @description Search query using semantic similarity */
        query?: string | null;
        /** @description List of topic names (repeat or comma-separated) */
        topics?: string[] | null;
        /** @description Filter by country (e.g., 'Austria', 'European Union') */
        country?: string | null;
        /** @description User ID for personalized meeting recommendations */
        user_id?: string | null;
        /** @description Filter by source table(s) (repeat or comma-separated) */
        source_table?: string[] | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Meeting'][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_meeting_suggestions_meetings_suggestions_get: {
    parameters: {
      query: {
        /** @description Fuzzy text to search meeting titles */
        query: string;
        /** @description Number of suggestions to return */
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['MeetingSuggestionResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_meetings_by_legislative_id_legislative_files_meetings_get: {
    parameters: {
      query: {
        /** @description Legislative procedure reference ID to filter meetings */
        legislative_id: string;
        /** @description Maximum number of meetings to return */
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['LegislativeMeetingsResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  dummy_crawl_crawler__get: {
    parameters: {
      query?: never;
      header?: {
        token?: string | null;
      };
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            [key: string]: unknown;
          };
        };
      };
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  run_scheduled_tasks_scheduler_tick_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            [key: string]: string;
          };
        };
      };
    };
  };
  run_task_scheduler_run__job_name__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        job_name: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_chat_response_chat__post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ChatMessageItem'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  create_new_session_chat_start_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['NewSessionItem'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['NewChatResponseModel'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_all_messages_chat_sessions__session_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        session_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['MessagesResponseModel'][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_user_sessions_chat_sessions_get: {
    parameters: {
      query: {
        user_id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SessionsResponseModel'][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_topics_topics_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Topic'][];
        };
      };
    };
  };
  get_legislative_files_legislative_files_get: {
    parameters: {
      query?: {
        limit?: number;
        /** @description Semantic search query */
        query?: string | null;
        /** @description Filter by reference year (e.g. 2025) */
        year?: number | null;
        /** @description Filter by committee name */
        committee?: string | null;
        /** @description Filter by rapporteur name */
        rapporteur?: string | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['LegislativeFilesResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_legislation_suggestions_legislative_files_suggestions_get: {
    parameters: {
      query: {
        /** @description Fuzzy text to search legislation titles */
        query: string;
        /** @description Number of suggestions to return */
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['LegislativeFileSuggestionResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_notifications_for_user_notifications__user_id__get: {
    parameters: {
      query?: {
        limit?: number;
      };
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Notification'][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_alerts_endpoint_alerts_get: {
    parameters: {
      query: {
        /** @description User ID for retrieving alerts */
        user_id: string;
        /** @description Include inactive alerts */
        include_inactive?: boolean | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['AlertResponse'][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  create_alert_endpoint_alerts_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAlertRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['AlertResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  delete_alert_endpoint_alerts__alert_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        alert_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  set_alert_active_endpoint_alerts__alert_id__patch: {
    parameters: {
      query: {
        /** @description Set alert active/inactive */
        active: boolean;
      };
      header?: never;
      path: {
        alert_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_relevant_meetings_endpoint_alerts__alert_id__meetings_get: {
    parameters: {
      query?: {
        k?: number;
      };
      header?: never;
      path: {
        alert_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  root__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            [key: string]: string | boolean;
          };
        };
      };
    };
  };
}
